// _______________ COLORS _______________ //
// name with http://chir.ag/projects/name-that-color/#D8CCFF
$color-primary: #20232a; // comes with template

$white: #ffffff;
$bridal-heath: #fffbf3;
$alabaster: #f7f7f7;
$old-lace: #fdf5e9;
$magnolia: #fbfaff;
$green-white: #ebede3;
$alto: #d7d7d7;
$boulder: #757575;
$cape-cod: #3c4748;
$cod-gray: #181818;
$dk-gray: #4b4b4b;
$firefly: #08131f;
$black: #000000;
$untd-font-gray: #484e56;

$logo-text-color: #8f9287;
$tower-gray: #9dbab7;
$flax-smoke: #818967;
$chalet-green: #4a6f34;
$turtle-green: #2c390b;
$shark: #292d33;
$cinnabar: #e94f34;
$orange-roughy: #d4441c; // consolidate with cinnabar?
$fog: #d8ccff;
$deluge: #7768ae;

$cri-color-1: #7b53ef;
$cri-color-3: #cabbf5;
$bar-highlight: #e94f34;
// Distrib chart height.
// Also used for legend height and bar chart collection parent height.
$distrib-chart-height: 260px;
$feeder-background-color: #fcfcf8;
$feeder-panes-border: #e8eae4;
$cp-label-color: #606b44;
$cpal-orange: #e55934;
$cpal-orange-light: #ffeee5;
$navbar-height: 64px;

// Colors for point layer categories
$color-point-social_infrastructure: rgba(154, 85, 142, 1);
$color-point-commerce: rgba(73, 81, 94, 1);
$color-point-school: rgba(145, 75, 13, 1);
$color-point-public_health: rgba(219, 134, 48, 1);
$color-untd-gray: #626b77;
$color-untd-darkgray: #303030;
$color-untd-lemon: #f1f1ad;
$color-untd-darklemon: #98980d;
$color-untd-blue: #447a9c;
$color-untd-lightgray: #b5bcc6;

// _______________ SPACING _______________ //
// space elements in increments of .8rem (8px)
$spacer: 0.8rem;

// can be used with <Row noGutters /> to selectively add margins
// (and avoid shrinking column content)
$gutter: 16px;

// inside Cols that don't take up the full screen width,
// use $column to apply margins etc that are increments
// of the screen-scoped columns (helps to mirror figma layout)
$column: 8.333333vw; // 100/12

$sm-start: 320px;
$md-start: 768px; //\\
$lg-start: 992px;
$xl-start: 1280px; //\\

$grid-breakpoints: (
  xs: 0,
  sm: $sm-start,
  md: $md-start,
  lg: $lg-start,
  xl: $xl-start,
);

$font-weight-bolder: 500;
$font-weight-bold: 400;
$font-weight-light: 300;
$font-weight-lighter: 200;

$hero-wide-img-width-md: 9 * $column;
$hero-wide-img-width-xl: 7 * $column;
$sticky-header-height: 64px; // keep in sync with stickyHeaderHeight in consts.js

// Explorer-specific variables
$feeder-schools-chart-height: 250px;

$control-panel-width: 72px;

$breakpoints: (
  'xs': 0,
  'sm': 320px,
  'md': 768px,
  'lg': 992px,
  'xl': 1280px,
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

// @media only screen and (min-width: 200px) and (max-width: 767px)  {
//     //Put your CSS here for 200px to 767px width devices (cover all mobile portrait width //
//
//     }

@function get-next-in-breakpoints($map, $key) {
  @if $key == 'xs' {
    @return map-get($breakpoints, 'sm');
  }
  @if $key == 'sm' {
    @return map-get($breakpoints, 'md');
  }
  @if $key == 'md' {
    @return map-get($breakpoints, 'lg');
  }
  @if $key == 'lg' {
    @return map-get($breakpoints, 'xl');
  }
}

@mixin respond-to-only($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) and (max-width: get-next-in-breakpoints($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 1;
  }
  20% {
    transform: scale(25, 25);
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(40, 40);
  }
}
